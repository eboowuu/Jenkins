pipeline {
    agent any

    stages {
        stage('Pull')  {
          steps {
            checkout([$class: 'GitSCM', branches: [[name: '*/master']], doGenerateSubmoduleConfigurations: false, extensions: [], submoduleCfg: [], userRemoteConfigs: [[credentialsId: 'GitHub', url: 'git@github.com:duncansuttles/EnBCIT.git']]])
          }
        }
        stage('Build') {
            steps {
                bat 'cd SeleniumTest && mvn test'
            }
        }
        stage('Report'){
            steps {
                junit 'SeleniumTest\\target\\surefire-reports\\TEST-net.magnetar.starwiki.TestWiki.xml'
            }
        }
    }
    post {
        always {
            script{
                if(currentBuild.result == null) {
                    currentBuild.result = 'SUCCESS'
                }
                logs = currentBuild.rawBuild.getLog(200)
                email_logs = ""
                for (String item: logs) {
                    if(item.contains('[Pipeline]') == false) {
                        //item = item.replaceAll(/Bo Wu/, ' ')
                   
                        email_logs = email_logs + item + "\n"    
                        
                    }
                }
            }
            echo currentBuild.result
            emailext (
                attachLog: true,
                subject: "${currentBuild.result}: Job [${env.JOB_NAME}]",
                mimeType: 'text/html',
                body: """<p>${currentBuild.result}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]':</p>
                <h3 color='red'>Build Logs</h3>
                <pre color='red'>${email_logs}</pre>
                <p>Check console output at "<a href="${env.BUILD_URL}/consoleText">${env.JOB_NAME} [${env.BUILD_NUMBER}]</a>"</p>""",
                to: 'eboowuu@gmail.com'
            )
        }
    }
}
